name: Run Durable tests

on:
  schedule:
    # Run every midnight UTC
    - cron: "0 0 * * *"
  workflow_dispatch: # manually triggered
    inputs:
      environment:
        description: 'Environment name (one of: dev, qa, tnet, prod)'
        required: true
        default: 'qa'

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  publish-suite:
    name: Publish Suite
    runs-on: ubuntu-latest
    outputs:
      build_tag: ${{ steps.generate-build-tag.outputs.build_tag }}
    steps:
    -
      uses: actions/checkout@v3
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    -
      name: Login to Public ECR
      uses: docker/login-action@v2
      with:
        registry: public.ecr.aws
        username: ${{ env.AWS_ACCESS_KEY_ID }}
        password: ${{ env.AWS_SECRET_ACCESS_KEY }}
      env:
        AWS_REGION: us-east-1
    -
      name: Generate build tag
      id: generate-build-tag
      run: |
        # Choose unique name for this build
        BUILD_TAG="$(echo ${{ github.sha }} | head -c 8)-${{ github.run_id }}"
        echo "Build tag:"
        echo ${BUILD_TAG}
        echo "build_tag=${BUILD_TAG}" >> $GITHUB_OUTPUT
        cat $GITHUB_OUTPUT
    -
      name: Build and Publish
      run: make BUILD_TAG=${{ steps.generate-build-tag.outputs.build_tag }} publish-suite

  run-tests:
    name: Test
    runs-on: ubuntu-latest
    needs:
      - publish-suite
    strategy:
      fail-fast: false
      matrix:
        network: [dev, qa, tnet, prod]
    steps:
      -
        uses: actions/checkout@v3
      -
        name: Test ${{ matrix.network }}
        if: ${{ github.event.inputs.environment == null || github.event.inputs.environment == matrix.network }}
        env:
          BUILD_TAG: ${{ needs.publish-suite.outputs.build_tag }}
        run: make DURABLE_ENV=${{ matrix.network }} durable-tests

  collect-results:
    name: Durable Test Results
    if: ${{ always() }}
    runs-on: ubuntu-latest
    needs: [run-tests]
    steps:
      - run: exit 1
        # see https://stackoverflow.com/a/67532120/4907315
        if: >-
          ${{
               contains(needs.*.result, 'failure')
            || contains(needs.*.result, 'cancelled')
          }}
